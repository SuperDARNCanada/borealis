syntax = "proto3";

package datawritemetadata;

message IntegrationTimeMetadata {
  uint32 experiment_id = 1;
  string experiment_string = 2;
  repeated SequenceType sequences = 3;
  uint32 nave = 4;
  uint32 last_seqn_num = 5;
  bool scan_flag  = 6;
  double integration_time  = 7;
  double tx_center_freq = 8;
  double rx_center_freq = 9;

  message SequenceType {
    repeated RXChan rxchannel = 1;
    repeated uint32 blanks = 2;
    TXDebugData tx_data = 3;

    message RXChan {
      uint32 slice_id = 1;
      float frang = 2;
      uint32 nrang = 3;
      repeated Beam beams = 4;
      bool rx_only = 5;
      uint32 pulse_len = 6;
      uint32 tau_spacing = 7;
      uint32 rxfreq = 8;
      PulseTable ptab = 9;
      bool acf = 10;
      bool xcf = 11;
      bool acfint = 12;
      float rsep = 13;
      LagTable ltab = 14;
      string comment = 15;
      string interfacing = 16;
      repeated uint32 rx_main_antennas = 17; // Main antennas received on for experiment slice.
      repeated uint32 rx_intf_antennas = 18;

      message Beam {
      uint32 beamnum = 1;  // no channel phase data because beamforming already occurred
      double beamazimuth = 2;
      }

      message PulseTable {  // length = length of sequence
      repeated uint32 pulse_position = 1;
      }

      message LagTable {
      repeated Lag lag = 1;

        message Lag { // each Lag must have 2 pulse positions
          repeated uint32 pulse_position = 1;
          uint32 lag_num = 2;
        }
      }
    }

    message TXDebugData {
      float txrate = 1;
      float txctrfreq = 2;
      repeated uint32 pulse_sequence_timing_us = 3;
      repeated float pulse_offset_error_us = 4;
      repeated SamplesBuffer tx_samples = 5;
      uint32 dmrate = 6;
      float dmrate_error = 7;
      repeated SamplesBuffer decimated_tx_samples = 8;

      message SamplesBuffer {
        repeated double real = 1;
        repeated double imag = 2;
        uint32 tx_antenna_number = 3;
      }
    }
  }
}
