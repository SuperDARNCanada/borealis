# The following error cases don't seem to be testable by writing an experiment file. Some of them are
# testable by other methods.
#
# Class ExperimentPrototype:
#
# method set_scheduling_mode:
#    1. scheduling_mode set by experiment handler is not in the possible_scheduling_modes list
#
# Class DecimationScheme:
# method __init__:
#    1. rxrate is not 5.0e6 or the output rate is not 3.333e3 (for default filter if stages is None)
#
# Class ScanClassBase:
# method prep_for_nested_scan_class:
#    1. Slice ID not found
#    1. Slice ID not found
#
# Module radar_control:
# method radar:
#    1. zmq error setting up sockets with socket_operations.create_sockets(ids, options.router_address)
#    2. If there's a new experiment, but there is a NameError exception (shouldn't really happen ever)
# method search_for_experiment:
#    1. zmq error when attempting socket_operations.send_request(radar_control_to_exp_handler, exphan_to_radctrl_iden, status)
#    2. zmq error when trying socket_operations.recv_exp(radar_control_to_exp_handler, exphan_to_radctrl_iden, rad_ctrl_print)
#
# Module sample_building:
# method create_uncombined_pulses:
#    1. real_freq is not equal to wave_freq_hz (only for non-SINE wavetypes)
# method get_samples:
#    1. iwave_table or qwave_table passed to method, but not both
# method make_pulse_samples:
#    1. AssertionError (pulses in the pulse list don't have the same combined_pulse_index or pulse_timing_us)
#    2. RuntimeWarning (I assume overflowing the variable with the accumulation)
#
# Class ExperimentOptions:
# method __init__:
#    1. Cannot open config_file (typically borealis_path/config.ini)
#    2. Cannot open hdw.dat file (typically borealis_path/hdw.dat.[radar])
#    3. Cannot find valid lines for current time period in hardware file
#    4. Found incorrect number of parameters in hardware file (need 19)
#    5. Cannot open restrict.dat file (typically at borealis_path/restrict.dat.[radar])
#
#
#

# **** The following test is from module sample_building method get_wavetables:
testing_archive.test_wavetype_not_defined::Wavetype .* not defined

# **** The following 2 tests are from experiment_handler module, retrieve_experiment() method ****
testing_archive.test_no_class::No experiment classes are present that are built from parent class ExperimentPrototype - exiting
testing_archive.test_two_classes::You have more than one experiment class in your experiment file - exiting

# **** The following 8 tests are from ExperimentPrototype class, __init__() method ****
testing_archive.test_cpid_unique::CPID must be unique. .* is in use by another local experiment
testing_archive.test_cpid_int::CPID must be a unique int
testing_archive.test_cpid_pos::The CPID should be a positive number in the experiment. Borealis will determine if it should be negative based on the scheduling mode. Only experiments run during discretionary time will have negative CPIDs.
testing_archive.test_output_rxrate_high::Experiment's output sample rate is too high
testing_archive.test_rxrate_high::Experiment's receive bandwidth is too large
testing_archive.test_rxbw_not_divisible::Experiment's receive bandwidth .* is not possible as it must be an integer divisor of USRP master clock rate
testing_archive.test_txrate_high::Experiment's transmit bandwidth is too large
testing_archive.test_txbw_not_divisible::Experiment's transmit bandwidth .* is not possible as it must be an integer divisor of USRP master clock rate

# **** The following test is from ExperimentPrototype class, add_slice() method ****
testing_archive.test_bad_slice::Attempt to add a slice failed - .* is not a dictionary of slice parameters

# **** The following test is from ExperimentPrototype class, del_slice() method ****
testing_archive.test_del_slice_dne::Cannot remove slice id .* : it does not exist in slice dictionary

# **** The following 2 tests are from ExperimentPrototype class, edit_slice() method ****
testing_archive.test_edit_slice_dne::Trying to edit .* but it does not exist in Slice_IDs list
testing_archive.test_edit_slice_bad_param::Cannot edit slice ID .*: .* is not a valid slice parameter

# **** The following 3 tests are from ExperimentPrototype class, check_new_slice_interfacing() method ****
testing_archive.test_bad_interface::Interface value with slice .* not valid. Types available are
testing_archive.test_bad_slice_id::Cannot add slice: the interfacing_dict set interfacing to an unknown slice .* not in slice ids
testing_archive.test_bad_interfacing::The interfacing values of new slice cannot be reconciled. Interfacing with slice .* and with slice .* does not make sense with existing interface between slices of .*

# **** The following 23 tests are from ExperimentPrototype class, check_slice() method ****
testing_archive.test_unused_param::Slice .* has a parameter that is not used: .* = .*
testing_archive.test_too_many_tx_antennas::Slice .* has too many main TX antenna channels .* greater than config .*
testing_archive.test_too_many_rx_antennas::Slice .* has too many main RX antenna channels .* greater than config .*
testing_archive.test_too_many_int_antennas::Slice .* has too many RX interferometer antenna channels .* greater than config .*
testing_archive.test_tx_antenna_dne::Slice .* specifies TX main array antenna numbers over config max .*
testing_archive.test_tx_antenna_dups::Slice .* TX main antennas has duplicate antennas
testing_archive.test_rx_antenna_dne::Slice .* specifies RX main array antenna numbers over config max .*
testing_archive.test_rx_antenna_dups::Slice .* RX main antennas has duplicate antennas
testing_archive.test_int_antenna_dne::Slice .* specifies interferometer array antenna numbers over config max .*
testing_archive.test_int_antenna_dups::Slice .* RX interferometer antennas has duplicate antennas
testing_archive.test_seq_not_increasing::Slice .* pulse_sequence not increasing
testing_archive.test_pulse_len_too_high::Slice .* pulse length greater than tau_spacing
testing_archive.test_pulse_len_too_low::Slice .* pulse length too small
testing_archive.test_tau_too_small::Slice .* multi-pulse increment too small
testing_archive.test_tau_not_multiple::Slice .* correlation lags will be off because tau_spacing .* us is not a multiple of the output rx sampling period \(1\/output_rx_rate .* Hz\).
testing_archive.test_intt_too_low::Slice .* : pulse sequence is too long for integration time given
testing_archive.test_beam_angle_dups::Slice .* beam angles has duplicate directions
testing_archive.test_beam_angle_not_increasing::Slice .* beam_angle not increasing clockwise \(E of N is positive\)
testing_archive.test_scanbound_but_no_intt::Slice .* must have intt enabled to use scanbound
testing_archive.test_scanbound_negative::Slice .* scanbound times must be non-negative
testing_archive.test_scanbound_not_increasing::Slice .* scanbound times must be increasing
testing_archive.test_intt_longer_than_scanbound::Slice .* intt .*ms longer than scanbound time .*s
testing_archive.test_intt_longer_than_scanbounds::Slice .* intt .*ms longer than one of the scanbound times

##### I'm not sure how to test the following 1 test right now #####
#testing_archive.test_beam_order_too_long::Slice .* beam order too long for scanbound
##### The following tests seem to be superceded by tests in experiment_prototype.py in check_slice_minimum_requirements ####
#testing_archive.test_beam_order_empty::Slice .* beam order scan empty
#testing_archive.test_beam_order_num_too_high::Slice .* scan beam number .* DNE
#testing_archive.test_beam_order_listnum_too_high::Slice .* scan beam number .* DNE
##### The following test is superceded by a test in experiment_prototype.py in check_slice_minimum_requirements #####
#testing_archive.test_no_seq::Slice .* has transmission frequency but no pulse sequence defined
##### The below test seems to be superceded by sample_building.py: get_wavetables(...)
#testing_archive.test_wavetype_not_supported::Slice .* wavetype of .* currently not supported
##### The following test appears to be a duplicate of another test in experiment_prototype.py check_slice_minimum_requirements(...) ####
#testing_archive.test_no_intt_intn::Slice .* has transmission but no intt or intn
##### The following test doesn't appear to fail, and the radar operates with the message: "intn is set in experiment slice but will not be used due to intt No Self Check Errors." ####
#testing_archive.test_both_intt_intn::Slice .* choose either intn or intt to be the limit for number of integrations in an integration period.
##### The following test seems to be superceded by other specific parameter tests
#testing_archive.test_missing_param::Slice .* is missing Necessary Parameter .*

# **** The following 23 tests (18+4 extra from the dne tests) are from ExperimentPrototype class, check_slice_minimum_requirements() method ****
testing_archive.test_sequence_dne::Slice must specify pulse_sequence that must be a list of integers
testing_archive.test_sequence_not_list::Slice must specify pulse_sequence that must be a list of integers
testing_archive.test_sequence_not_int::Slice must specify pulse_sequence that must be a list of integers
testing_archive.test_tau_dne::Slice must specify tau_spacing in us that must be an integer
testing_archive.test_tau_not_int::Slice must specify tau_spacing in us that must be an integer
testing_archive.test_pulse_len_dne::Slice must specify pulse_len in us that must be an integer
testing_archive.test_pulse_len_not_int::Slice must specify pulse_len in us that must be an integer
testing_archive.test_num_ranges_dne::Slice must specify num_ranges that must be an integer
testing_archive.test_num_ranges_not_int::Slice must specify num_ranges that must be an integer
testing_archive.test_first_range_dne::Slice must specify first_range in km that must be an integer
testing_archive.test_first_range_not_int::Slice must specify first_range in km that must be an integer
testing_archive.test_no_intt_intn::Slice must specify either an intn \(unitless\) or intt in ms
testing_archive.test_intn_not_int::intn must be an integer
testing_archive.test_intt_not_num::intt must be a number
testing_archive.test_beam_angle_dne::Slice must specify beam_angle that must be a list of numbers \(ints or floats\) which are angles of degrees off boresight \(positive E of N\)
testing_archive.test_beam_angle_not_list::Slice must specify beam_angle that must be a list of numbers \(ints or floats\) which are angles of degrees off boresight \(positive E of N\)
testing_archive.test_beam_angle_not_num::.*Slice must specify beam_angle that must be a list of numbers \(ints or floats\) which are angles of degrees off boresight \(positive E of N\)
testing_archive.test_beam_order_dne::Slice must specify beam_order that must be a list of ints or lists \(of ints\) corresponding to the order of the angles in the beam_angle list
testing_archive.test_beam_order_not_list::Slice must specify beam_order that must be a list of ints or lists \(of ints\) corresponding to the order of the angles in the beam_angle list
testing_archive.test_beam_order_not_ints_or_lists::Slice must specify beam_order that must be a list of ints or lists \(of ints\) corresponding to the order of the angles in the beam_angle list
testing_archive.test_beam_order_lists_not_ints::Slice must specify beam_order that must be a list of ints or lists \(of ints\) corresponding to the order of the angles in the beam_angle list
testing_archive.test_beam_order_lists_bad_index::Beam number .* could not index in beam_angle list of length .*. Slice: .*
testing_archive.test_beam_order_bad_index::Beam number .* could not index in beam_angle list of length .*. Slice: .*

# **** The following 13 tests are from ExperimentPrototype class, check_slice_specific_requirements() method ****
testing_archive.test_clrfrqrng_not_list::clrfrqrange must be an integer list of length = 2
testing_archive.test_clrfrqrng_not_2::clrfrqrange must be an integer list of length = 2
testing_archive.test_clrfrqrng_not_ints::clrfrqrange must be an integer list of length = 2
testing_archive.test_clrfrqrng_not_inc::clrfrqrange must be between min and max tx frequencies .* and rx frequencies .* according to license and/or center frequencies / sampling rates / transition bands, and must have lower frequency first
testing_archive.test_clrfrqrng_too_high::clrfrqrange must be between min and max tx frequencies .* and rx frequencies .* according to license and/or center frequencies / sampling rates / transition bands, and must have lower frequency first
testing_archive.test_clrfrqrng_too_low::clrfrqrange must be between min and max tx frequencies .* and rx frequencies .* according to license and/or center frequencies / sampling rates / transition bands, and must have lower frequency first
#testing_archive.test_clrfrqrng_restricted::clrfrqrange is entirely within restricted range .*
testing_archive.test_rxfreq_not_num::rxfreq must be a number \(kHz\) between rx min and max frequencies .* for the radar license and be within range given center frequency .* kHz, sampling rate .* kHz, and transition band .* kHz
testing_archive.test_rxfreq_too_high::rxfreq must be a number \(kHz\) between rx min and max frequencies .* for the radar license and be within range given center frequency .* kHz, sampling rate .* kHz, and transition band .* kHz
testing_archive.test_rxfreq_too_low::rxfreq must be a number \(kHz\) between rx min and max frequencies .* for the radar license and be within range given center frequency .* kHz, sampling rate .* kHz, and transition band .* kHz
testing_archive.test_txfreq_not_num::txfreq must be a number \(kHz\) between tx min and max frequencies .* and rx min and max frequencies .* for the radar license and be within range given center frequencies \(.* kHz\), sampling rates \(.* kHz\), and transition band \(.* kHz\)
testing_archive.test_txfreq_too_high::txfreq must be a number \(kHz\) between tx min and max frequencies .* and rx min and max frequencies .* for the radar license and be within range given center frequencies \(.* kHz\), sampling rates \(.* kHz\), and transition band \(.* kHz\)
testing_archive.test_txfreq_too_low::txfreq must be a number \(kHz\) between tx min and max frequencies .* and rx min and max frequencies .* for the radar license and be within range given center frequencies \(.* kHz\), sampling rates \(.* kHz\), and transition band \(.* kHz\)
#testing_archive.test_txfreq_restricted::txfreq is within a restricted frequency range .*

# **** The following 1 test is from ExperimentPrototype class, self_check() method ****
testing_archive.test_no_slices::Invalid num_slices less than 1

# **** The following 2 tests are from ExperimentPrototype class, build_scans()
testing_archive.test_scanbound_dne::If one slice has a scanbound, they all must to avoid up to minute-long downtimes.
testing_archive.test_too_many_slices::Length of filter taps once zero-padded \(.*\) in decimation stage .* with this many slices \(.*\) is too large for GPU max .*

# **** The following 3 tests are from ExperimentPrototype class, set_slice_defaults() method ****
testing_archive.test_pulse_len_bad::For an experiment slice with real-time acfs, pulse length must be equal \(within 1 us\) to 1\/output_rx_rate to make acfs valid. Current pulse length is .* us, output rate is .* Hz
testing_archive.test_avg_method_dne::Averaging method .* not valid method. Possible methods are .*
testing_archive.test_lag_table_bad::Lag .* not valid; One of the pulses does not exist in the sequence

# **** The following test is from ExperimentPrototype class, set_slice_identifiers() method ****
testing_archive.test_no_freq_set::An rxfreq, txfreq, or clrfrqrange must be specified in a slice

# **** The following 4 tests are from DecimationScheme class, __init__() method ****
testing_archive.test_too_many_dm_stages::Number of decimation stages .* is greater than max available .*
testing_archive.test_stage0_bad_inputrate::Decimation stage 0 does not have input rate .* equal to USRP sampling rate .*
testing_archive.test_stagex_bad_outputrate::Decimation stage .* output rate .* does not equal next stage .* input rate .*
testing_archive.test_finalstage_bad_outputrate::Last decimation stage .* does not have output rate .* equal to requested output data rate .*

# **** The following 3 tests are from DecimationStage class, __init__() method ****
testing_archive.test_dm_rate_not_int::Decimation rate is not an integer
testing_archive.test_taps_not_list::Filter taps .* of type .* must be a list in decimation stage .*
testing_archive.test_taps_not_nums::Filter tap .* is not numeric in decimation stage .*

# **** The following 2 tests are from AveragingPeriod class, __init__() method ****
testing_archive.test_slices_intt_bad::Slices .* and .* are INTEGRATION or PULSE interfaced and do not have the same Averaging Period duration intt
testing_archive.test_slices_intn_bad::Slices .* and .* are INTEGRATION or PULSE interfaced and do not have the same NAVE goal intn
testing_archive.test_slices_beam_order_bad::Slices .* and .* are INTEGRATION or PULSE interfaced but do not have the same number of integrations in their beam order

# **** The following test is from Scan class, __init__() method ****
testing_archive.test_slices_scanbound_bad::Scan boundary not the same between slices .* and .* for INTTIME or PULSE interfaced slices

